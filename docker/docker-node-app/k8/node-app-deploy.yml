apiVersion: apps/v1
kind: Deployment
metadata: 
  name: node-app
spec:
  selector:
    matchLabels:
      app: node-app
  replicas: 3
  template:
    metadata:
      labels:
        app: node-app
    spec:
      containers: 
        - name: node-app
          image: tudortocan/second-app # docker image
          ports:
            - containerPort: 3000
          env:
            - name: MONGO_URL
              value: mongodb://mongo:27017/
          imagePullPolicy: Never

---

apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo
  name: mongo-controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage
          gcePersistentDisk:
            pdName: mongo-disk
            fsType: ext4

---

apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
  name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    name: mongo

---

apiVersion: v1
kind: Service
metadata:
  name: node-app-lb
  namespace: default
spec:
  selector:
    app: node-app
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30000
    protocol: TCP
  selector:
    app: node-app
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - hostname: localhost